<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://qingz.top</id>
    <title>我的随笔 • Posts by &#34;类加载&#34; tag</title>
    <link href="http://qingz.top" />
    <updated>2021-11-09T15:03:02.000Z</updated>
    <category term="类加载" />
    <entry>
        <id>http://qingz.top/2021/11/09/java/jvm/JVM/</id>
        <title>类加载介绍</title>
        <link rel="alternate" href="http://qingz.top/2021/11/09/java/jvm/JVM/"/>
        <content type="html">&lt;h1 id=&#34;类加载过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#类加载过程&#34;&gt;#&lt;/a&gt; 类加载过程&lt;/h1&gt;
&lt;h2 id=&#34;123&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#123&#34;&gt;#&lt;/a&gt; 123&lt;/h2&gt;
&lt;p&gt;在将一个  &lt;code&gt;.java&lt;/code&gt;  编译成  &lt;code&gt;.class&lt;/code&gt;  并加载到  &lt;code&gt;JVM&lt;/code&gt;  时，会经历如下过程：&lt;/p&gt;
&lt;img data-src=&#34;G:\我的坚果云\笔记\WEB\后端\底层\JVM\类加载机制\类加载介绍\大体微观过程.png&#34; style=&#34;zoom:67%;&#34; /&gt;
&lt;p&gt;&lt;strong&gt;类加载&lt;/strong&gt; 的流程 主要有以下 &lt;strong&gt;五大步&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;加载&lt;/strong&gt;：只有在使用到类时才会去加载：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读取文件：在硬盘上查找并通过 &lt;code&gt;IO&lt;/code&gt;  读入字节码文件&lt;/li&gt;
&lt;li&gt;方法调用：例如调用类的  &lt;code&gt;main()&lt;/code&gt;  方法， &lt;code&gt;new&lt;/code&gt;  对象等等&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Class&lt;/code&gt;  对象生成：在加载阶段会在 &lt;strong&gt;内存&lt;/strong&gt; 中生成一个代表这个类的  &lt;code&gt;java.lang.Class&lt;/code&gt;  对象，作为 &lt;strong&gt;方法区&lt;/strong&gt; 这个类的各种 &lt;strong&gt;数据的访问入口&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;验证&lt;/strong&gt;：校验字节码文件的正确性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;准备&lt;/strong&gt;：给类的 &lt;strong&gt;静态变量分配内存空间&lt;/strong&gt;，并 &lt;strong&gt;赋予默认值&lt;/strong&gt;（零值）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;解析&lt;/strong&gt;：将 &lt;strong&gt;符号引用&lt;/strong&gt; 替代为 &lt;strong&gt;直接引用&lt;/strong&gt;，分为 &lt;strong&gt;静态链接&lt;/strong&gt;（解析时执行） 和 &lt;strong&gt;动态链接&lt;/strong&gt;（运行时执行），其中：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;静态链接&lt;/strong&gt;：该阶段会把一些 &lt;strong&gt;静态方法&lt;/strong&gt; 对应的 &lt;strong&gt;符号引用&lt;/strong&gt;（方法调用） 替换为 &lt;strong&gt;方法区&lt;/strong&gt; 中对应方法所在的 &lt;strong&gt;内存的指针 或 句柄&lt;/strong&gt;（直接引用）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;动态链接&lt;/strong&gt;：&lt;strong&gt;动态链接&lt;/strong&gt; 是在 &lt;strong&gt;程序运行期间&lt;/strong&gt;（运行到 &lt;strong&gt;那一行方法&lt;/strong&gt; 调用的 &lt;strong&gt;符号引用&lt;/strong&gt;） 将 &lt;strong&gt;符号引用&lt;/strong&gt; 替换为 &lt;strong&gt;直接引用&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;初始化&lt;/strong&gt;：对类的 &lt;strong&gt;静态变量&lt;/strong&gt; 初始化为 &lt;strong&gt;指定的值&lt;/strong&gt;，并执行 &lt;strong&gt;静态代码块&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;卸载&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;类被加载到 &lt;strong&gt;方法区&lt;/strong&gt; 中后主要包含 &lt;strong&gt;运行时常量池、类型信息、字段信息、方法信息、类加载器的引用、对应 &lt;code&gt;Class&lt;/code&gt;  实例的引用&lt;/strong&gt; 等信息。其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;类加载器的引用&lt;/strong&gt;：这个类到 &lt;strong&gt;类加载器实例&lt;/strong&gt;（位于堆空间） 的引用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对应 &lt;code&gt;Class&lt;/code&gt;  实例的引用&lt;/strong&gt;：类加载器在加载类信息放到方法区中后，会创建一个对应的 &lt;strong&gt; &lt;code&gt;Class&lt;/code&gt;  类型 的对象实例&lt;/strong&gt; 放到 &lt;strong&gt;堆 ( &lt;code&gt;Heap&lt;/code&gt; )&lt;/strong&gt; 中，作为 开发人员 访问方法区 中类定义的 &lt;strong&gt;入口&lt;/strong&gt; 和 切入点。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们以  &lt;code&gt;Math.class&lt;/code&gt;  为例对上述的过程进行讲解：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// com.qingz.jvm Math.java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Math&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; initData = &lt;span class=&#34;number&#34;&gt;666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; User user = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; User();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;compute&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; b = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; c = (a + b) * &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Math math = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Math();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        math.compute();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
</content>
        <category term="类加载" />
        <updated>2021-11-09T15:03:02.000Z</updated>
    </entry>
</feed>
